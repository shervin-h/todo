{"version":3,"sources":["stores/index.js","stores/TodoModel.js","components/TodoItem.js","stores/TodoStore.js","components/TodoEntry.js","components/TodosDetail.js","components/TodoItems.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["store","this","time","Date","interval","setInterval","clearInterval","observable","action","TodoModel","title","completed","id","TodoItem","observer","state","checked","onToggle","props","todo","toggle","TodoStore","toggleChecked","isCompleted","removeTodo","className","type","onChange","onClick","removeItem","Component","lastID","todos","push","todosList","unCompletedTodos","filter","item","i","length","TodoEntry","value","handleKeyDown","event","keyCode","preventDefault","addTodo","setState","placeholder","target","onKeyDown","TodosDetail","showAllTodos","showActiveTodos","showCompletedTodos","clearCompletely","href","clearComplete","TodoItems","map","App","src","logo","alt","width","height","toLocaleTimeString","style","margin","pauseClock","startClock","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efa6fc22.chunk.js","sourcesContent":["import {observable, action} from \"mobx\";\n\nclass Store {\n    @observable time\n    constructor() {\n        this.time = new Date()\n        this.interval = setInterval(() => { this.time = new Date() } ,1000)\n    }\n\n    @action\n    startClock(){\n        this.interval = setInterval( () => {this.time = new Date()} , 1000)\n    }\n\n    @action\n    pauseClock(){\n        clearInterval(this.interval)\n    }\n}\n\nconst store = new Store()\nexport default store","import {observable, action} from \"mobx\";\n\nexport default class TodoModel {\n\n    id\n    @observable title\n    @observable completed\n    store\n\n    constructor(store, title, completed, id) {\n\n        this.id = id\n        this.title = title\n        this.completed = completed\n        this.store = store\n    }\n\n    @action\n    toggle() {\n        this.completed = !this.completed\n    }\n}\n","import React, {Component} from \"react\"\nimport {observer} from \"mobx-react\";\n\nimport TodoStore from \"../stores/TodoStore\";\n\n@observer\nclass TodoItem extends Component {\n\n    state = {\n        checked: false\n    }\n\n    onToggle = () => {\n        this.props.todo.toggle()\n        TodoStore.toggleChecked()\n    }\n\n    removeItem(isCompleted){\n        TodoStore.removeTodo(this.props.todo.title, this.props.todo.id, isCompleted)\n    }\n\n    render() {\n        const {todo} = this.props\n        return (\n            <li className={todo.completed ? \"completed\" : \"\"}>\n                <div className=\"view\">\n                    <input\n                        type=\"checkbox\"\n                        className=\"toggle\"\n                        checked={todo.completed}\n\n                        onChange={\n                            this.onToggle\n                        }\n                    />\n                    <label>{todo.title}</label>\n                    <button\n                        className=\"destroy\"\n                        onClick={\n                            () => this.removeItem(todo.completed)\n                        }\n                    />\n                </div>\n            </li>\n        )\n    }\n}\n\nexport default TodoItem","import {observable, action} from \"mobx\";\nimport TodoModel from \"./TodoModel\"\nimport TodoItem from \"../components/TodoItem\";\n\nclass TodoStore {\n    @observable todos = []\n    @observable completedTodosList = []\n    @observable unCompletedTodosList = []\n\n    @observable todosList = []\n\n    lastID = 0\n\n    @observable unCompletedTodos = 0\n\n    @action\n    addTodo(title) {\n        this.todos.push(new TodoModel(this, title, false, this.lastID++))\n        this.todosList = this.todos\n        this.unCompletedTodos += 1\n    }\n\n    @action\n    removeTodo(title, id, isCompleted) {\n\n        this.todos = this.todos.filter(item => item.id !== id)\n        this.todosList = this.todosList.filter(item => item.id !== id)\n        if (!isCompleted){\n            this.unCompletedTodos -= 1\n        }\n    }\n\n    @action\n    toggleChecked() {\n        this.unCompletedTodos = 0\n        for (let i = 0; i < this.todos.length; i++) {\n            if (this.todos[i].completed === false) {\n                this.unCompletedTodos += 1\n            }\n        }\n    }\n\n    @action\n    showAllTodos(){\n        this.todosList = this.todos\n    }\n\n    @action\n    showActiveTodos(){\n        this.todosList = this.todos.filter(item => item.completed === false)\n    }\n\n    @action\n    showCompletedTodos(){\n        this.todosList = this.todos.filter(item => item.completed === true)\n    }\n\n    @action\n    clearCompletely(){\n        this.todos = []\n        this.todosList = []\n        this.unCompletedTodos = 0\n    }\n\n}\n\nconst store = new TodoStore()\nexport default store","import React, {Component} from \"react\"\nimport TodoStore from \"../stores/TodoStore\";\n\nclass TodoEntry extends Component {\n    state = {\n        value: \"\"\n    }\n\n    handleKeyDown = event => {\n        if (event.keyCode !== 13){\n            return\n        }\n        event.preventDefault()\n        TodoStore.addTodo(this.state.value)\n        this.setState({\n            value: \"\"\n        })\n    }\n\n    render() {\n        return (\n            <header className=\"header\">\n                <h1 className=\"glow\">Todos<span className=\"me glow\">by Shervin Hasanzadeh</span></h1>\n                <input\n                    type=\"text\"\n                    className=\"new-todo\"\n                    placeholder=\"What needs to be done?\"\n\n                    value={this.state.value}\n\n                    onChange={\n                        (event) => {\n                            this.setState({value: event.target.value})\n                        }\n                    }\n\n                    onKeyDown={\n                        event => this.handleKeyDown(event)\n                    }\n                />\n            </header>\n        )\n    }\n}\n\nexport default TodoEntry","import React, {Component} from \"react\";\nimport TodoStore from \"../stores/TodoStore\";\nimport {observer} from \"mobx-react\";\n\n@observer\nclass TodosDetail extends Component {\n\n    showAllTodos() {\n        TodoStore.showAllTodos()\n    }\n\n    showActiveTodos() {\n        TodoStore.showActiveTodos()\n    }\n\n    showCompletedTodos() {\n        TodoStore.showCompletedTodos()\n    }\n\n    clearComplete(){\n        TodoStore.clearCompletely()\n    }\n\n    render() {\n        return (\n            <li>\n                <div className=\"footer\">\n                    <div className=\"todo-count\">\n                        <strong>\n                            {TodoStore.unCompletedTodos} items left\n                        </strong>\n                    </div>\n                    <ul className=\"filters\">\n\n                        <li className=\"\">\n                            <a href=\"#\" onClick={\n                                () => {\n                                    this.showAllTodos()\n                                }\n                            }\n                            >\n                                All\n                            </a>\n                        </li>\n\n                        <li>\n                            <a href=\"#\" onClick={\n                                () => {\n                                    this.showActiveTodos()\n                                }\n                            }\n                            >\n                                Active\n                            </a>\n                        </li>\n\n                        <li>\n                            <a href=\"#\" onClick={\n                                () => {\n                                    this.showCompletedTodos()\n                                }\n                            }\n                            >\n                                Completed\n                            </a>\n                        </li>\n\n                    </ul>\n\n                    <div className=\"clear-completed\" onClick={\n                        () => {\n                            this.clearComplete()\n                        }\n                    }>\n                        clear completely\n                    </div>\n                </div>\n            </li>\n        )\n    }\n}\n\nexport default TodosDetail","import React, {Component} from \"react\"\nimport TodoItem from \"./TodoItem\";\nimport TodoStore from \"../stores/TodoStore\"\nimport {observer} from \"mobx-react\";\n\nimport TodosDetail from \"./TodosDetail\";\n\n@observer\nclass TodoItems extends Component {\n    render() {\n        const todos = TodoStore.todosList\n        return (\n            <section className=\"main\">\n                <ul className=\"todo-list\">\n                    {\n                        todos.map(todo => {\n                            return (\n                                <TodoItem key={todo.id} todo={todo} />\n                            )\n                        })\n                    }\n                    {\n                        (TodoStore.todos.length > 0)? <TodosDetail/> : ''\n                    }\n                </ul>\n            </section>\n\n        )\n    }\n}\n\nexport default TodoItems","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from \"react\"\nimport store from \"./stores\";\nimport {observer} from \"mobx-react\";\nimport TodoEntry from \"./components/TodoEntry\";\nimport TodoItems from \"./components/TodoItems\";\nimport Snowfall from 'react-snowfall'\n\nimport logo from './logo.svg';\nimport './App.css';\n\n@observer\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n\n                <Snowfall/>\n\n                <div className=\"my-app\">\n                    <div className=\"clock-area\">\n                        <img src={logo} className=\"App-logo\" alt=\"logo\" width={100} height={100}/>\n                        <div>\n                            {store.time.toLocaleTimeString()}\n                        </div>\n                        <div style={{margin: \"8px\"}}>\n                            <button\n                                className=\"clock\"\n                                onClick={\n                                    () => {\n                                        store.pauseClock()\n                                    }\n                                }>\n                                Pause\n                            </button>\n                            <button\n                                className=\"clock\"\n                                onClick={\n                                    () => {\n                                        store.startClock()\n                                    }\n                                }>\n                                Start\n                            </button>\n                        </div>\n                    </div>\n                </div>\n\n                <div id=\"todoapp\" className=\"todoapp\">\n                    <TodoEntry/>\n                    <TodoItems/>\n                </div>\n\n                <div className=\"father\">\n                    <p className=\"glow fa-text\">جهت شادی روح مرحوم‌ مغفور، جانباز سرافراز محمد حسن حسن زاده صلوات</p>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}